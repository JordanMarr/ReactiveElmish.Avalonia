<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup Condition="'$(Configuration)' != 'Debug'">
		<NoWarn>FS0044</NoWarn>
		<TreatWarningsAsErrors>true</TreatWarningsAsErrors>
	</PropertyGroup>

	<PropertyGroup>
		<!--<TargetFrameworks>net48;net6.0-windows10.0.17763.0;net7.0-windows10.0.17763.0;net8.0-windows10.0.17763.0;net6.0-windows10.0.19041.0;net7.0-windows10.0.19041.0;net8.0-windows10.0.19041.0</TargetFrameworks>-->
		<TargetFramework>net48</TargetFramework>
		<GeneratePackageOnBuild>true</GeneratePackageOnBuild>
		<GenerateDocumentationFile>true</GenerateDocumentationFile>
		<PublishRepositoryUrl>true</PublishRepositoryUrl>
		<DebugType>Embedded</DebugType>
		<EmbedAllSources>True</EmbedAllSources>
		<Authors>JordanMarr</Authors>
		<Description>F# C# ReactiveElmishStore and ViewModel for WPF.</Description>
		<PackageLicenseExpression>MIT</PackageLicenseExpression>
		<PackageProjectUrl>https://github.com/JordanMarr/ReactiveElmish.Avalonia</PackageProjectUrl>
		<PackageTags>F# C# fsharp Elmish MVU MVVM</PackageTags>
		<Version>1.0.1</Version>
		<!--Turn on warnings for unused values (arguments and let bindings) -->
		<OtherFlags>$(OtherFlags) --warnon:1182</OtherFlags>
		<TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage</TargetsForTfmSpecificBuildOutput>
		<EnableWindowsTargeting>true</EnableWindowsTargeting>
	</PropertyGroup>

	<ItemGroup>
		<Compile Include="ViewBinder.fs" />
		<Compile Include="WpfStore.fs" />
		<Compile Include="CompositionRoot.fs" />
		<Compile Include="ProgramExtensions.fs" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="Elmish" Version="4.0.1" />
		<PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="8.0.0" />
		<PackageReference Include="ReactiveUI.WPF" Version="19.5.1" />
	</ItemGroup>

	<ItemGroup>
	  <ProjectReference Include="..\ReactiveElmish\ReactiveElmish.fsproj" PrivateAssets="All" />
	</ItemGroup>

	<Target Name="CopyProjectReferencesToPackage" DependsOnTargets="BuildOnlySettings;ResolveReferences">
		<ItemGroup>
			<!-- Filter out unnecessary files -->
			<_ReferenceCopyLocalPaths Include="@(ReferenceCopyLocalPaths-&gt;WithMetadataValue('ReferenceSourceTarget', 'ProjectReference')-&gt;WithMetadataValue('PrivateAssets', 'All'))" />
		</ItemGroup>

		<!-- Print batches for debug purposes -->
		<Message Text="Batch for .nupkg: ReferenceCopyLocalPaths = @(_ReferenceCopyLocalPaths), ReferenceCopyLocalPaths.DestinationSubDirectory = %(_ReferenceCopyLocalPaths.DestinationSubDirectory) Filename = %(_ReferenceCopyLocalPaths.Filename) Extension = %(_ReferenceCopyLocalPaths.Extension)" Importance="High" Condition="'@(_ReferenceCopyLocalPaths)' != ''" />

		<ItemGroup>
			<!-- Add file to package with consideration of sub folder. If empty, the root folder is chosen. -->
			<BuildOutputInPackage Include="@(_ReferenceCopyLocalPaths)" TargetPath="%(_ReferenceCopyLocalPaths.DestinationSubDirectory)" />
		</ItemGroup>
	</Target>

	<ItemGroup>
	  <Reference Include="PresentationCore" />
	  <Reference Include="PresentationFramework" />
	</ItemGroup>

</Project>
